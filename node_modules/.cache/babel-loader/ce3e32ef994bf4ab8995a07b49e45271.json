{"remainingRequest":"/Users/hay/wirte some random code/metalsUI/node_modules/babel-loader/lib/index.js!/Users/hay/wirte some random code/metalsUI/node_modules/eslint-loader/index.js??ref--13-0!/Users/hay/wirte some random code/metalsUI/src/utils/request.js","dependencies":[{"path":"/Users/hay/wirte some random code/metalsUI/src/utils/request.js","mtime":1557669989991},{"path":"/Users/hay/wirte some random code/metalsUI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hay/wirte some random code/metalsUI/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hay/wirte some random code/metalsUI/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Axios from 'axios';\nimport Config from \"../config/app.js\";\nvar service = Axios.create({\n  baseURL: Config.apiUrl,\n  headers: {\n    'Accept': '*/*'\n  },\n  timeout: Config.timeout\n});\nservice.defaults.retry = Config.requestRetry;\nservice.defaults.retryDelay = Config.requestRetryDelay;\nservice.interceptors.request.use(function (config) {\n  // 开启请求蒙版\n  // if (!config.closeLoading) {\n  //     window.loadingInstance = Loading.service();\n  // }\n  var noParameters = config.url.indexOf('?') == -1; // config.url = noParameters ? config.url+'?access_token=' + getToken(): config.url+'&access_token='+ getToken();\n\n  return config;\n}, function (error) {\n  Promise.reject(error);\n});\nservice.interceptors.response.use(function (response) {\n  //Grade\n  // 关闭请求蒙版\n  // if (!response.config.closeLoading) {\n  //     setTimeout(_ => {\n  //         window.loadingInstance.close();\n  //     }, 4);\n  // }\n  var res = response;\n\n  if (res.status !== 200) {\n    Notification({\n      title: '数据返回出错',\n      message: \"请稍后重试\",\n      type: 'warning'\n    }); //return Promise.reject('error')\n  } else {\n    if (response.config.hasOwnProperty('closeInterceptors') && response.config.closeInterceptors) {\n      return res;\n    }\n\n    if (res.data.errorCode != 0) {\n      Notification({\n        title: res.data.message,\n        type: 'warning'\n      });\n\n      if (res.data.errorCode == 402) {//登录状态失效\n        // setTimeout(_ => {\n        //     window.location.href = './login.html';\n        // }, 2000)\n      }\n\n      return Promise.reject('error');\n    }\n\n    return res.data;\n  }\n}, function (error) {\n  console.log(error); // setTimeout(_ => {\n  //     window.loadingInstance.close();\n  // }, 300)\n\n  Notification({\n    title: \"请求未响应\",\n    message: \"服务器可能出了点问题\",\n    type: 'warning'\n  });\n  return Promise.reject(error); //千万不能去掉，，，否则请求超时会进入到then方法，导致逻辑错误。\n});\nexport default service;",{"version":3,"sources":["/Users/hay/wirte some random code/metalsUI/src/utils/request.js"],"names":["Axios","Config","service","create","baseURL","apiUrl","headers","timeout","defaults","retry","requestRetry","retryDelay","requestRetryDelay","interceptors","request","use","config","noParameters","url","indexOf","error","Promise","reject","response","res","status","Notification","title","message","type","hasOwnProperty","closeInterceptors","data","errorCode","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP;AAGA,IAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAEH,MAAM,CAACI,MADS;AAEzBC,EAAAA,OAAO,EAAE;AACL,cAAU;AADL,GAFgB;AAKzBC,EAAAA,OAAO,EAAEN,MAAM,CAACM;AALS,CAAb,CAAhB;AAOAL,OAAO,CAACM,QAAR,CAAiBC,KAAjB,GAAyBR,MAAM,CAACS,YAAhC;AACAR,OAAO,CAACM,QAAR,CAAiBG,UAAjB,GAA8BV,MAAM,CAACW,iBAArC;AAEAV,OAAO,CAACW,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACI,UAAAC,MAAM,EAAI;AACN;AACA;AACA;AACA;AAEA,MAAIC,YAAY,GAAGD,MAAM,CAACE,GAAP,CAAWC,OAAX,CAAmB,GAAnB,KAA2B,CAAC,CAA/C,CANM,CAQN;;AAEA,SAAOH,MAAP;AACH,CAZL,EAaI,UAAAI,KAAK,EAAI;AACLC,EAAAA,OAAO,CAACC,MAAR,CAAeF,KAAf;AACH,CAfL;AAmBAlB,OAAO,CAACW,YAAR,CAAqBU,QAArB,CAA8BR,GAA9B,CACI,UAAAQ,QAAQ,EAAI;AAAC;AACT;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,GAAG,GAAGD,QAAZ;;AACA,MAAIC,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpBC,IAAAA,YAAY,CAAC;AACTC,MAAAA,KAAK,EAAE,QADE;AAETC,MAAAA,OAAO,EAAE,OAFA;AAGTC,MAAAA,IAAI,EAAE;AAHG,KAAD,CAAZ,CADoB,CAMpB;AACH,GAPD,MAOO;AACH,QAAKN,QAAQ,CAACP,MAAV,CAAkBc,cAAlB,CAAiC,mBAAjC,KAAyDP,QAAQ,CAACP,MAAT,CAAgBe,iBAA7E,EAAgG;AAC5F,aAAOP,GAAP;AACH;;AAED,QAAIA,GAAG,CAACQ,IAAJ,CAASC,SAAT,IAAsB,CAA1B,EAA6B;AACzBP,MAAAA,YAAY,CAAC;AACTC,QAAAA,KAAK,EAAEH,GAAG,CAACQ,IAAJ,CAASJ,OADP;AAETC,QAAAA,IAAI,EAAE;AAFG,OAAD,CAAZ;;AAIA,UAAIL,GAAG,CAACQ,IAAJ,CAASC,SAAT,IAAsB,GAA1B,EAA+B,CAAC;AAE5B;AACA;AACA;AACH;;AACD,aAAOZ,OAAO,CAACC,MAAR,CAAe,OAAf,CAAP;AACH;;AACD,WAAOE,GAAG,CAACQ,IAAX;AACH;AACJ,CApCL,EAqCI,UAAAZ,KAAK,EAAI;AACLc,EAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ,EADK,CAEL;AACA;AACA;;AACAM,EAAAA,YAAY,CAAC;AACTC,IAAAA,KAAK,EAAE,OADE;AAETC,IAAAA,OAAO,EAAE,YAFA;AAGTC,IAAAA,IAAI,EAAE;AAHG,GAAD,CAAZ;AAKA,SAAOR,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP,CAVK,CAUuB;AAC/B,CAhDL;AAmDA,eAAelB,OAAf","sourcesContent":["import Axios from 'axios'\nimport Config from '../config/app.js'\n\n\nconst service = Axios.create({\n    baseURL: Config.apiUrl,\n    headers: {\n        'Accept': '*/*'\n    },\n    timeout: Config.timeout\n});\nservice.defaults.retry = Config.requestRetry;\nservice.defaults.retryDelay = Config.requestRetryDelay;\n\nservice.interceptors.request.use(\n    config => {\n        // 开启请求蒙版\n        // if (!config.closeLoading) {\n        //     window.loadingInstance = Loading.service();\n        // }\n\n        let noParameters = config.url.indexOf('?') == -1;\n\n        // config.url = noParameters ? config.url+'?access_token=' + getToken(): config.url+'&access_token='+ getToken();\n\n        return config\n    },\n    error => {\n        Promise.reject(error)\n    }\n)\n\n\nservice.interceptors.response.use(\n    response => {//Grade\n        // 关闭请求蒙版\n        // if (!response.config.closeLoading) {\n        //     setTimeout(_ => {\n        //         window.loadingInstance.close();\n        //     }, 4);\n        // }\n        const res = response\n        if (res.status !== 200) {\n            Notification({\n                title: '数据返回出错',\n                message: \"请稍后重试\",\n                type: 'warning'\n            });\n            //return Promise.reject('error')\n        } else {\n            if ((response.config).hasOwnProperty('closeInterceptors') && response.config.closeInterceptors) {\n                return res\n            }\n\n            if (res.data.errorCode != 0) {\n                Notification({\n                    title: res.data.message,\n                    type: 'warning'\n                });\n                if (res.data.errorCode == 402) {//登录状态失效\n\n                    // setTimeout(_ => {\n                    //     window.location.href = './login.html';\n                    // }, 2000)\n                }\n                return Promise.reject('error');\n            }\n            return res.data\n        }\n    },\n    error => {\n        console.log(error);\n        // setTimeout(_ => {\n        //     window.loadingInstance.close();\n        // }, 300)\n        Notification({\n            title: \"请求未响应\",\n            message: \"服务器可能出了点问题\",\n            type: 'warning'\n        });\n        return Promise.reject(error)//千万不能去掉，，，否则请求超时会进入到then方法，导致逻辑错误。\n    }\n)\n\nexport default service\n"]}]}